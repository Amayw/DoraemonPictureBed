{"version":3,"sources":["views/Register.js"],"names":["FormWrapper","styled","div","layout","labelCol","span","tailLayout","wrapperCol","offset","Register","AuthStore","useStores","history","useHistory","name","onFinish","values","setUsername","username","setPassword","password","register","then","message","info","push","catch","err","error","onFinishFailed","errorInfo","console","log","Item","label","rules","required","validator","rule","value","test","Promise","reject","length","resolve","min","Password","getFieldValue","type","htmlType"],"mappings":"iUAMA,IAAMA,EAAcC,IAAOC,IAAV,KAMXC,EAAS,CACXC,SAAU,CAACC,KAAM,IAGfC,EAAa,CACfC,WAAY,CAACC,OAAQ,KAgGVC,UA7FE,WAAO,IACbC,EAAWC,cAAXD,UACDE,EAAQ,IAAIC,IA+BlB,OACI,kBAACb,EAAD,KACI,kBAAC,IAAD,iBACQG,EADR,CAEIW,KAAK,QACLC,SAnCK,SAAAC,GACbN,EAAUO,YAAYD,EAAOE,UAC7BR,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,WACLC,MAAK,WACFC,IAAQC,KAAK,kCACjBZ,EAAQa,KAAK,QAEZC,OAAM,SAAAC,GACHJ,IAAQK,MAAM,sCA2BdC,eAvBW,SAAAC,GACnBC,QAAQC,IAAI,UAAWF,MAwBf,kBAAC,IAAKG,KAAN,CACIC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,yCAEb,CACIc,UA7BG,SAACC,EAAKC,GACzB,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,oGACxCH,EAAMI,OAAO,GAAGJ,EAAMI,OAAO,GAAWF,QAAQC,OAAO,iDACnDD,QAAQG,cA8BH,kBAAC,IAAD,OAGJ,kBAAC,IAAKX,KAAN,CACIC,MAAM,eACNpB,KAAK,WACLqB,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,wCAEb,CACIsB,IAAK,EACLtB,QAAS,uDAGb,kBAAC,IAAMuB,SAAP,OAGJ,kBAAC,IAAKb,KAAN,CACIC,MAAM,2BACNpB,KAAK,kBACLqB,MAAO,CAAC,CACJC,UAAU,EACVb,QAAS,mCAlDP,SAAC,GAAD,IAAEwB,EAAF,EAAEA,cAAF,MAAoB,CACtCV,UADsC,SAC5BC,EAAKC,GACX,OAAGQ,EAAc,cAAcR,EAAcE,QAAQG,UAC9CH,QAAQC,OAAO,+DAoDd,kBAAC,IAAMI,SAAP,OAGJ,kBAAC,IAAKb,KAAS3B,EACX,kBAAC,IAAD,CAAQ0C,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/11.1b14dcb2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {Button, Form, Input, message} from 'antd';\nimport {useStores} from '../stores'\nimport {useHistory} from 'react-router-dom'\n\nconst FormWrapper = styled.div`\n    width: 40vw;\n    margin: 100px auto;\n    \n`;\n\nconst layout = {\n    labelCol: {span: 4},\n    // wrapperCol: {span: 8},\n};\nconst tailLayout = {\n    wrapperCol: {offset: 12},\n};\n\nconst Register = () => {\n    const {AuthStore}=useStores();\n    const history=new useHistory();\n    const onFinish = values => {\n        AuthStore.setUsername(values.username);\n        AuthStore.setPassword(values.password);\n        AuthStore.register()\n            .then(()=>{\n                message.info('注册成功！');\n            history.push('/');\n        })\n            .catch(err=>{\n                message.error('注册失败！');\n            })\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const validateUserName=(rule,value)=>{\n        if(/\\W/.test(value)) return Promise.reject('不能出现字母数字下划线以外的字符')\n        if(value.length<4||value.length>10) return Promise.reject('长度外4到10个字符')\n        return Promise.resolve();\n    }\n\n    const validateConfirm=({getFieldValue})=>({\n        validator(rule,value){\n            if(getFieldValue('password')===value) return Promise.resolve();\n            return Promise.reject('两次输入密码不一致')\n    }\n    })\n\n    return (\n        <FormWrapper>\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"用户名\"\n                    name=\"username\"\n                    rules={[{\n                        required: true,\n                        message: '请输入用户名!'\n                    },\n                    {\n                        validator:validateUserName\n                    }]\n                    }\n                >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"密码\"\n                    name=\"password\"\n                    rules={[{\n                        required: true,\n                        message: '请输入密码！'\n                    },\n                    {\n                        min: 6,\n                        message: '长度不少于6个字符'\n                    }]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"确认密码\"\n                    name=\"confirmPassword\"\n                    rules={[{\n                        required: true,\n                        message: '请确认密码!'\n                    },\n                     validateConfirm\n                    ]}\n                >\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        注册\n                    </Button>\n                </Form.Item>\n            </Form>\n        </FormWrapper>\n    );\n};\nexport default Register\n"],"sourceRoot":""}