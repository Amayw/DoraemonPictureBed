{"version":3,"sources":["assets/smile.png","components/Header.js","components/Loading.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/image.js","stores/history.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","Component","observer","useStores","AuthStore","UserStore","history","useHistory","useEffect","pullUser","src","logo","alt","activeClassName","to","exact","className","currentUser","attributes","username","onClick","logout","push","LoadingWrapper","div","Loading","Home","lazy","History","About","Login","Register","App","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","error","logIn","logOut","current","Upload","file","filename","imageItem","Object","avFile","File","set","save","err","page","limit","query","Query","include","equalTo","skip","find","images","catch","makeObservable","this","observable","action","getCurrentUser","isUploading","serverFile","finally","newList","list","concat","isLoading","appendImage","length","hasMore","message","values","isLogin","resetUser","HistoryStore","resetList","ImageStore","resetImage","context","createContext","useContext"],"mappings":"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","file":"static/js/main.d9b966cc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/smile.7f6eb629.png\";","import React,{useEffect} from 'react';\nimport {NavLink,useHistory} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {useStores} from '../stores';\nimport {observer} from 'mobx-react';\nimport { Button } from 'antd';\nimport logo from '../assets/smile.png'\n\nconst Header = styled.header`\n    position: relative;\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n    background: #677097;\n    color: #f1f4fc;\n    padding: 10px 100px;\n    vertical-align: center;\n    >nav{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        >img{\n        width: 30px;\n        height:30px;\n        margin-right: 20px;\n        }\n        >span{\n        font-weight: bold;\n        }\n        >ul{\n            display: flex;\n            margin: 0;\n            >li{\n                margin-left: 30px;\n                >a{\n                   color:#f1f4fc;\n                   &.active{\n                   font-weight: bold;\n                      color:#84c2f1;\n                   }\n                }\n\n            }\n        }\n    }\n    >.userRelated{\n          display: flex;\n          align-items: center;\n          >.rightButton{\n            margin-left: 20px;\n          }\n        }\n    @media (max-width: 800px){\n      padding: 20px 6px;\n      >nav{\n        >span{\n          display: none;\n        }\n        >img{\n           margin-right: 1px;\n        }\n        >ul{\n          >li{\n            margin-left: 0;\n            >a{\n              padding: 0 4px;\n            }\n          }\n        }\n      }\n      >.userRelated{\n        >button{\n          padding: 0 6px;\n          &.rightButton{\n            margin-left: 4px;\n          }\n        }\n      }\n    }\n\n`\n\nconst Component = observer(() => {\n    const {AuthStore,UserStore} = useStores();\n    const history=new useHistory();\n    const handleLogout=()=>{\n        AuthStore.logout();\n        history.push('/login')\n    }\n\n    const handleLogin=()=>{\n        history.push('/login')\n    }\n\n    const handleRegister=()=>{\n        history.push('/register')\n    }\n    useEffect(()=>{\n        UserStore.pullUser();\n    },[])\n    return (\n        <Header>\n            <nav>\n                <img src={logo} alt=\"logo\"/>\n                <span>Doraemon Picture Bed</span>\n                <ul>\n                    <li>\n                        <NavLink activeClassName='active' to=\"/\" exact>首页</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName='active' to=\"/history\">上传历史</NavLink>\n                    </li>\n                    <li>\n                        <NavLink activeClassName='active' to=\"/about\">关于我</NavLink>\n                    </li>\n                </ul>\n            </nav>\n            <div className=\"userRelated\">\n                {UserStore.currentUser ?\n                    <>\n                        {UserStore.currentUser.attributes.username}\n                        <Button className=\"rightButton\" onClick={handleLogout}>注销</Button>\n                    </>\n                    : <>\n                        <Button  onClick={handleLogin}>登录\n                        </Button>\n                        <Button onClick={handleRegister} className=\"rightButton\">注册\n                        </Button>\n                    </>}\n            </div>\n\n        </Header>\n    );\n});\n\nexport default Component;","import React from 'react';\nimport styled from 'styled-components'\n\nconst LoadingWrapper=styled.div`\n    >span{\n      color: #84c2f1;\n    }\n  \n\n`\n\nfunction Loading() {\n    return (\n        <LoadingWrapper>\n            <span>嘻嘻~~~使出吃铜锣烧的劲来加载~</span>\n        </LoadingWrapper>\n    );\n}\n\nexport default Loading;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport {\n    Switch,\n    Route ,\n} from 'react-router-dom';\nimport {Suspense, lazy} from 'react';\n\nconst Home = lazy(() => import('./views/Home'));\nconst History = lazy(() => import('./views/History'));\nconst About = lazy(() => import('./views/About'));\nconst Login = lazy(() => import('./views/Login'));\nconst Register = lazy(() => import('./views/Register'));\n\nconst App=()=>{\n    return (\n        <>\n            <Header/>\n            <main>\n                <Suspense fallback={<Loading/>}>\n                    <Switch>\n                        <Route path=\"/about\">\n                            <About/>\n                        </Route>\n                        <Route path=\"/history\">\n                            <History/>\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login/>\n                        </Route>\n                        <Route path=\"/register\">\n                            <Register/>\n                        </Route>\n                        <Route path=\"/\" exact>\n                            <Home/>\n                        </Route>\n                    </Switch>\n                </Suspense>\n            </main>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    HashRouter as Router,\n} from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n            <Router>\n                <App/>\n            </Router>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n","import AV, {User} from 'leancloud-storage';\n\nAV.init({\n    appId: 'YB0lRc7ESEXMlXQ52KJI01ST-gzGzoHsz',\n    appKey: '46LYhshmG2oFKUNKjcLVx8A5',\n    serverURL: 'https://yb0lrc7e.lc-cn-n1-shared.com'\n});\n\nconst Auth = {\n    register(username, password) {\n        let user = new AV.User();\n        user.setUsername(username);\n        user.setPassword(password);\n        return new Promise((resolve, reject) => {\n            user.signUp().then((loginedUser) => resolve(loginedUser), error => reject(error));\n        });\n    },\n    login(username, password) {\n        return new Promise((resolve, reject) => {\n            User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\n        });\n\n    },\n    logout() {\n        User.logOut();\n    },\n    getCurrentUser() {\n        return User.current();\n    }\n};\n\nconst Upload = {\n    addImage(file, filename) {\n        const imageItem = new AV.Object('Image');\n        const avFile = new AV.File(filename, file);\n        imageItem.set('owner', AV.User.current());\n        imageItem.set('url', avFile);\n        imageItem.set('filename', filename);\n        return new Promise((resolve, reject) => {\n            imageItem.save().then(\n                (file) => {\n                    resolve(file);\n                },\n                err => {\n                    reject(err);\n                });\n        });\n    },\n    queryImage({page=0,limit=10}){\n        const query = new AV.Query('Image');\n        query.include('owner');\n        query.equalTo('owner', AV.User.current());\n        query.limit(limit);\n        query.skip(page*limit);\n        // query.descending('createAt');\n        return new Promise((resolve,reject)=>{\n            query.find().then((images) => {\n                resolve(images);\n            }).catch(err=>{\n                reject(err);\n            });\n        })\n    }\n};\n\nexport {Auth,Upload};","import {observable, action, makeObservable} from 'mobx';\nimport AuthStore from './auth'\n\nclass UserStore{\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable currentUser=null;\n\n    @action pullUser=()=>{\n        this.currentUser=AuthStore.getCurrentUser()\n    };\n\n    @action resetUser=()=>{\n        this.currentUser=null;\n    }\n}\n\nexport default new UserStore();","import {observable, action, makeObservable} from 'mobx';\nimport {Upload} from '../models'\n\nclass ImageStore{\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable file=null;\n    @observable serverFile=null;\n    @observable filename=\"\";\n    @observable isUploading=false;\n\n    @action setFile=(file)=>{\n        this.file=file;\n    }\n\n    @action setFileName=(filename)=>{\n        this.filename=filename;\n    }\n\n    @action addImage=()=>{\n        this.isUploading=true;\n        this.serverFile=null;\n        return new Promise((resolve,reject)=>{\n            Upload.addImage(this.file,this.filename)\n                .then((serverFile)=>{\n                    this.serverFile=serverFile;\n                    resolve(serverFile);\n                })\n                .catch(err=>{\n                    reject(err);\n                })\n                .finally(()=>{\n                    this.isUploading=false;\n                });\n        })\n    };\n\n    @action resetImage=()=>{\n        this.file=null;\n        this.serverFile=null;\n        this.filename=\"\";\n        this.isUploading=false;\n    }\n\n}\n\nexport default new ImageStore();","import {action, observable,makeObservable} from 'mobx';\nimport {Upload} from '../models'\nimport {message} from 'antd'\n\nclass HistoryStore{\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable page=0;\n    @observable list=[];\n    @observable isLoading=false;\n    @observable hasMore=true;\n    limit=10;\n\n    @action appendImage=(newList)=>{\n        this.list=this.list.concat(newList);\n    }\n    @action queryImage=()=>{\n        this.isLoading=true;\n        Upload.queryImage({page:this.page,limit:this.limit})\n        .then(newList=>{\n            this.page++;\n            this.appendImage(newList);\n            if(newList.length<this.limit){\n                this.hasMore=false;\n            }\n        }).catch(err=>{\n            message.error('加载数据失败！');\n        }).finally(()=>{\n            this.isLoading=false;\n        })\n    }\n\n    @action resetList=()=>{\n        this.page=0;\n        this.list=[];\n        this.isLoading=false;\n        this.hasMore=true;\n    }\n\n}\nexport default new HistoryStore();\n","import {action, observable,makeObservable} from 'mobx';\nimport {Auth} from '../models'\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\nclass AuthStore{\n    constructor() {\n        makeObservable(this)\n    }\n\n    @observable isLogin=false;\n    @observable values={\n        username:'',\n        password:''\n    };\n\n    @action setUsername=(username)=>{\n        this.values.username=username;\n    }\n\n    @action setPassword=(password)=>{\n        this.values.password=password;\n    }\n\n    @action login=()=>{\n        return new Promise((resolve,reject)=>{\n            Auth.login(this.values.username,this.values.password)\n                .then(user=>{\n                    UserStore.pullUser();\n                    this.isLogin=true;\n                    resolve(user);\n                })\n                .catch(err=>{\n                    UserStore.resetUser();\n                    this.isLogin=false;\n                    reject(err);\n                })\n        })\n    }\n\n\n\n    @action register=()=>{\n        return new Promise((resolve,reject)=>{\n            Auth.register(this.values.username,this.values.password)\n                .then(user=>{\n                    UserStore.pullUser();\n                    this.isLogin=true;\n                    resolve(user);\n                })\n                .catch(err=>{\n                    UserStore.resetUser();\n                    this.isLogin=false;\n                    reject(err);\n                })\n        })\n    }\n\n    @action logout=()=>{\n        UserStore.resetUser();\n        HistoryStore.resetList();\n        this.isLogin=false;\n        ImageStore.resetImage();\n        Auth.logout();\n    }\n\n    @action getCurrentUser=()=>{\n        return Auth.getCurrentUser();\n    }\n\n}\n\nexport default new AuthStore();\n","import { createContext, useContext } from 'react';\nimport AuthStore from './auth';\nimport UserStore from './user';\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\nconst context = createContext({\n    AuthStore,UserStore,ImageStore,HistoryStore\n});\n\nexport const useStores = () => useContext(context);"],"sourceRoot":""}